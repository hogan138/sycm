apply plugin: 'com.android.application'

android {

    signingConfigs {
        release {
//            storeFile file('qapp.jks')
//            storePassword "heimi123456"
//            keyAlias "qapp"
//            keyPassword "heimi123456"
            storeFile
            storePassword
            keyAlias
            keyPassword
            //自动打包添加
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.shuyun.qapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 42002
        versionName "4.2.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Enabling multidex support.
        multiDexEnabled true

        //配置dimension
//        flavorDimensions "pack"

        //占位符--自动打包添加
        manifestPlaceholders = [UMENG_CHANNEL: "example"]


        ndk {
            //阿里推送要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'x86'
        }

    }
    /*多渠道的一些配置 */
    //关于多渠道打包的另一种配置可以参考另一篇文章：https://www.jianshu.com/p/332525b09a88
//    productFlavors {
//        tencent {
//            applicationId "com.example.administrator.tcsharefood"
//            dimension "pack"
//            manifestPlaceholders = [appName: "tencent"]
//        }
//        baidu {
//            applicationId "com.example.administrator.bdsharefood"
//            dimension "pack"
//            manifestPlaceholders = [appName: "baidu"]
//        }
//    }

    //读取签名配置文件
    getSigningProperties()


    //自定义输出包名的设置
//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            // 输出apk名称为sharev1.0_tencent.apk
//            def fileName = "share${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
//            outputFileName = fileName
//        }
//    }


    buildTypes {
        release {
            //是否开启混淆
            minifyEnabled false
            //加载混淆的配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable = false
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
        //输出类型
//        applicationVariants.all {
//            //判断是release还是debug版本
//            def buildType = it.buildType.name
//            //获取当前时间的"YYYY-MM-dd"格式。
//            def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
//            //如果是正式包,将其输入到指定文件夹
//            if (buildType == "release") {
//                it.getPackageApplicationProvider().outputDirectory = new File('C:\\out_apk' + "/${it.productFlavors[0].applicationId}/${createTime}")
//            }
//        }
    }

    sourceSets {//手动添加jniLibs在src/main/jniLibs时要加入
        main {
            jniLibs.srcDirs = ['libs']//设置目标的so存放路径
        }
    }
    //   添加
    dexOptions {
        jumboMode true
    }

    //Add the following configuration
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}

//读取签名配置文件
def getSigningProperties() {

    def propFile = file('signing.properties')
    if (propFile.canRead()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:cardview-v7:28.0.0'

    //implementation 'com.android.support:support-v4:27.0.0'//适配低版本系统4.4

    //implementation 'com.android.support:multidex:1.0.3' //兼容4.4版本
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //fastjson
    implementation 'com.alibaba:fastjson:1.2.54'

    //添加引导页和轮播框架 https://github.com/kevin-mob/banner
    implementation 'cn.bingoogolapple:bga-banner:2.2.4@aar'

    //添加butterknife依赖
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //添加retrofit网络请求依赖
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'

    //compile 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    //添加RxJava和RxAndroid依赖
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'

    //添加LitePal数据库框架依赖 https://github.com/LitePalFramework/LitePal

    //implementation 'org.litepal.android:core:1.6.1'
    implementation 'org.litepal.android:java:3.0.0'

    //添加跑马灯库
    implementation 'com.sunfusheng:marqueeview:1.3.3'

    //recycleview
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    //添加glide依赖
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    //微信sdk
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'

    //libs/smantifraud.jar

    //工具类
    implementation 'com.blankj:utilcode:1.10.0'

    //二维码
    implementation 'cn.yipianfengye.android:zxing-library:2.2'

    //弹框dialog
    implementation 'com.mylhyl:circleDialog:2.6.9'

    //沉浸状态栏
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'

    //tablayout
    implementation 'com.android.support:design:28.0.0'

    //下拉刷新上拉加载
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4'

    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4'

    //腾讯统计分析

    //libs/mta-android-sdk-3.4.4.jar'

    //libs/mid-sdk-4.06.jar'

    //分享动画
    implementation 'com.android.support:support-dynamic-animation:28.0.0'

    //WebSocket 依赖包
    implementation 'org.java-websocket:Java-WebSocket:1.3.0'

    //libs/universal-image-loader-1.9.3.jar

    //分割Dex
    implementation 'com.android.support:multidex:1.0.3'

    //oss
    implementation 'com.aliyun.dpa:oss-android-sdk:2.9.2'

    //SuperTextView
    implementation 'com.github.lygttpod:SuperTextView:2.0.1'

    //侧滑返回
    implementation 'me.imid.swipebacklayout.lib:library:1.1.0'

    //进度条
    implementation 'com.dyhdyh.loadingbar:loadingbar:1.4.4'

    //广告轮播 https://github.com/kevin-mob/banner
    implementation 'cn.kevin:bannerview:1.0.8'

    //EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //阿里推送
    implementation('com.aliyun.ams:alicloud-android-push:3.1.4') {
        exclude module: 'alicloud-android-utdid' //增加了电商SDK 包冲突
        exclude module: 'alicloud-android-ut' //增加了电商SDK 包冲突
    }
    implementation('com.aliyun.ams:alicloud-android-third-push:3.0.5@aar') {
        exclude module: 'alicloud-android-utdid' //增加了电商SDK 包冲突
        exclude module: 'alicloud-android-ut' //增加了电商SDK 包冲突
    }

    //阿里百川电商SDK(2019.1.2)

    //支付 alipaySdk-15.5.9-20181123210657-noUtdid.arr

    //登陆
    implementation 'com.ali.auth.sdk:alibabauth_core:1.1.4@jar'
    implementation 'com.ali.auth.sdk:alibabauth_ui:1.1.4@aar'
    implementation 'com.ali.auth.sdk:alibabauth_ext:1.1.4@jar'

    //安全基础
    implementation 'com.taobao.android:securityguardaar3:5.1.81@aar'

    //Mtop网关
    implementation 'com.taobao.android:mtopsdk_allinone_open:1.2.2.4@jar'

    //applink
    implementation 'com.taobao.android:alibc_applink:2.0.0.9@jar'

    //UT
    implementation 'com.taobao.android:utdid4all:1.1.5.3_proguard@jar'

    //组件可用性统计
    implementation 'com.alibaba.mtl:app-monitor-sdk:2.5.1.3_for_bc_proguard@jar'

    //电商SDK
    implementation 'com.alibaba.sdk.android:alibc_trade_sdk:3.1.1.11@aar'

    //图片压缩 https://github.com/zetbaitsu/Compressor
    implementation 'id.zelory:compressor:2.1.0'

    //视频播放
    implementation project(path: ':nicevideoplayer')
    //    implementation 'com.github.xiaoyanger0825:NiceVieoPlayer:v2.2'

    //https://github.com/zzhoujay/RichText 富文本加载
    implementation 'com.zzhoujay.richtext:richtext:3.0.8'
    implementation 'com.zzhoujay:html:1.0.2'

    //流式布局
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    //lib包下umeng包下的是友盟分享
    implementation files('libs/umeng-analytics-8.0.0.jar')

    //tablayout   地址：https://github.com/AndroidKun/XTabLayout
    implementation 'com.androidkun:XTabLayout:1.1.4'

    //省市区选择器   //地址：https://github.com/Bigkoo/Android-PickerView
    implementation 'com.contrarywind:Android-PickerView:4.1.8'

    //lombok
    compileOnly "org.projectlombok:lombok:1.18.6"
    annotationProcessor "org.projectlombok:lombok:1.18.6"
    implementation 'org.glassfish:javax.annotation:10.0-b28'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
}
